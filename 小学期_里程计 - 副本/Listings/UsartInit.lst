C51 COMPILER V9.60.0.0   USARTINIT                                                         06/29/2023 12:10:40 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE USARTINIT
OBJECT MODULE PLACED IN .\Objects\UsartInit.obj
COMPILER INVOKED BY: C:\Keil_v5_c51\C51\BIN\C51.EXE Application\UsartInit.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\UsartInit.lst) TABS(2) OBJECT(.\Objects\UsartInit.obj)

line level    source

   1          #include <reg52.h>
   2          #include <stdio.h>
   3          #include "usartinit.h"
   4          #define Usart_Data_length 5
   5          sbit LED0 = P1^0;
   6          extern unsigned char getData;
   7          unsigned char Usart_Data[Usart_Data_length];
   8          unsigned int Usart_Data_count,Usart_flag = 0,Usart_error = 0;
   9          
  10          void uart_init(){
  11   1         PCON |= 0x80;    //使能波特率倍速位SMOD
  12   1        SCON = 0x50;    //8位数据,可变波特率
  13   1        TMOD &= 0x0F;   //清除定时器1模式位
  14   1        TMOD |= 0x20;   //设定定时器1为8位自动重装方式
  15   1        TL1 = 0xF3;   //设定定时初值
  16   1        TH1 = 0xF3;   //设定定时器重装值
  17   1        ET1 = 0;    //禁止定时器1中断
  18   1        TR1 = 1;    //启动定时器1
  19   1       
  20   1          REN = 1; //不开启这个无法接受数据
  21   1          ES = 1;  //开启串口中断使能
  22   1          EA = 1;
  23   1          TI = 0;
  24   1          RI = 0;       //串口中断开关,采用查询法时不用打开中断   
  25   1      } 
  26          
  27          void uart_send_byte(unsigned char d){ //发送一个字节的数据，形参d即为待发送数据。
  28   1        ES = 0;
  29   1        SBUF = d;
  30   1        while(!TI);
  31   1        TI = 0;   
  32   1        ES = 1;
  33   1      }
  34          //发送一串字符串
  35          void uart_send_string(unsigned char *str){
  36   1        while(*str){
  37   2          uart_send_byte(*str++); 
  38   2        }
  39   1      }
  40          
  41          void uart(void) interrupt 4 {    //串口发送中断
  42   1          if(RI){    //收到数据   
  43   2              getData = SBUF;
  44   2              if(Usart_flag && Usart_Data_count < Usart_Data_length - 1){//循环接收
  45   3                Usart_Data_count ++;  
  46   3                Usart_Data[Usart_Data_count] = getData;
  47   3              }
  48   2              if(Usart_flag && Usart_Data_count == Usart_Data_length - 1){//接收完成flag置0
  49   3                Usart_flag = 0;
  50   3                if((unsigned int)(Usart_Data[Usart_Data_length - 1]) != Usart_Data_length){//校验
  51   4                  Usart_error = 1;
  52   4                }else{
  53   4                  Usart_error = 0;
  54   4                  //uart_send_string(Usart_Data);
C51 COMPILER V9.60.0.0   USARTINIT                                                         06/29/2023 12:10:40 PAGE 2   

  55   4                }
  56   3              }
  57   2              if(getData == 0x5A){//收到帧头则开始
  58   3                Usart_flag = 1;
  59   3                Usart_Data_count = 0;  
  60   3                Usart_Data[Usart_Data_count] = getData;
  61   3              }
  62   2              RI=0;   //清中断请求
  63   2          }else{        //发送完一字节数据
  64   2             TI=0;
  65   2          }
  66   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    200    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
