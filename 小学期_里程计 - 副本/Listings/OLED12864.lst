C51 COMPILER V9.60.0.0   OLED12864                                                         06/29/2023 12:10:41 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED12864
OBJECT MODULE PLACED IN .\Objects\OLED12864.obj
COMPILER INVOKED BY: C:\Keil_v5_c51\C51\BIN\C51.EXE Application\OLED12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\OLED12864.lst) TABS(2) OBJECT(.\Objects\OLED12864.obj)

line level    source

   1          #include "codetab.h"
   2          #include "LQ12864.h"
   3          #include "OLED12864.h"
   4          #include <rtx51tny.h>
   5          #include <stdio.h>
   6          #include <string.h>
   7          #define LED P1
   8          sbit LED0 = P1^0;
   9          sbit LED1 = P1^1;
  10          sbit LED2 = P1^2;
  11          sbit LED3 = P1^3;
  12          sbit LED4 = P1^4;
  13          sbit LED5 = P1^5;
  14          sbit LED6 = P1^6;
  15          sbit LED7 = P1^7;
  16          int oled_i = 0,led_i = 0,line_i = 0;
  17          extern float w_speed,w_distance,ws_distance;
  18          extern int speed_choose;
  19          unsigned char speed_ch[6],distance_ch[6];
  20          extern unsigned int Usart_flag;
  21          unsigned int display_mode = 6,display_last_mode = 0,distance_mode = 0;
  22          unsigned char led_speed[4] = {0x7F,0x3F,0x1F,0x0F};
  23          void usart_led(void){
  24   1        if(Usart_flag){
  25   2            led_i = 30;
  26   2          }else{
  27   2            led_i = 0;
  28   2          }
  29   1          while(led_i){
  30   2            os_wait2(K_TMO,50);
  31   2            LED0 = !LED0;
  32   2            led_i --;
  33   2          }
  34   1      }
  35          void float_to_char(float num, unsigned char str[6]){
  36   1        int whole_part;    // 取整数部分 
  37   1        float decimal_part;    // 取小数部分
  38   1        whole_part = (int)num;    // 取整数部分 
  39   1        decimal_part = (num - whole_part) * 100;    // 取小数部分
  40   1        str[0] = (unsigned char)(whole_part / 10) + '0';
  41   1        str[1] = (unsigned char)(whole_part % 10) + '0';
  42   1        str[2] = '.';
  43   1        str[3] = (unsigned char)((int)decimal_part / 10) + '0';
  44   1        str[4] = (unsigned char)((int)decimal_part % 10) + '0';
  45   1        str[5] = '\0';
  46   1      }
  47          void float_1_to_char(float num, unsigned char str[6]){
  48   1        int whole_part;    // 取整数部分 
  49   1        float decimal_part;    // 取小数部分
  50   1        whole_part = (int)num;    // 取整数部分 
  51   1        decimal_part = (num - whole_part) * 100;    // 取小数部分
  52   1        str[0] = (unsigned char)(whole_part / 100) + '0';
  53   1        str[1] = (unsigned char)((whole_part / 10) % 10) + '0';
  54   1        str[2] = (unsigned char)(whole_part %  10) + '0';
C51 COMPILER V9.60.0.0   OLED12864                                                         06/29/2023 12:10:41 PAGE 2   

  55   1        str[3] = '.';
  56   1        str[4] = (unsigned char)((int)decimal_part / 10) + '0';
  57   1        str[5] = '\0';
  58   1      }
  59          int ii = 0;
  60          void led(void){
  61   1        switch (display_mode){
  62   2          case 1:
  63   2            LED = 0xAA;
  64   2            os_wait2(K_TMO,200);
  65   2            os_wait2(K_TMO,100);
  66   2            LED = 0x55;
  67   2            os_wait2(K_TMO,200);
  68   2            os_wait2(K_TMO,100);
  69   2            if(speed_choose == 2 || speed_choose == 3){
  70   3              P2 = P2 | 0xF0;
  71   3            }
  72   2            break;
  73   2          
  74   2          case 2:
  75   2            break;
  76   2            
  77   2          case 3:
  78   2            LED = P2 & led_speed[speed_choose];
  79   2            break;
  80   2            
  81   2          case 4:
  82   2            LED = 0x00;
  83   2            os_wait2(K_TMO,200);
  84   2            os_wait2(K_TMO,200);
  85   2            LED = 0xFF;
  86   2            os_wait2(K_TMO,200);
  87   2            os_wait2(K_TMO,200);
  88   2            break;
  89   2          
  90   2          case 5:
  91   2            
  92   2            break;
  93   2            
  94   2          case 6:
  95   2            LED = 0xFE;
  96   2            for(ii = 0; ii < 8;ii++){
  97   3              LED = (LED >> (8 - 1) | (LED << 1));//(x >> (32 - n) | (x << n))循环左移//(x << (32 - n) | (x >> n))右
             -移
  98   3              os_wait2(K_TMO,75);
  99   3            }
 100   2            break;
 101   2          
 102   2          default :
 103   2            break;
 104   2        }
 105   1        
 106   1      }
 107          void oled(void){
 108   1        if(w_distance >= 1000 && !distance_mode){
 109   2            distance_mode = 1;
 110   2            OLED_P8x16Str(112,4,"  ");
 111   2            OLED_P6x8Str(112,5,"KM");
 112   2          }
 113   1          if(!distance_mode){
 114   2            ws_distance = w_distance;
 115   2          }else{
C51 COMPILER V9.60.0.0   OLED12864                                                         06/29/2023 12:10:41 PAGE 3   

 116   2            ws_distance = w_distance / 1000;
 117   2          }
 118   1        switch (display_mode){
 119   2          case 1:
 120   2            display_last_mode = display_mode;
 121   2            float_to_char(w_speed,speed_ch);
 122   2            float_1_to_char(ws_distance,distance_ch);
 123   2            OLED_P6x8Str(7,0,"Mil billing system");
 124   2            OLED_P6x8Str(1 ,1,"--------------------");
 125   2            OLED_P8x16Str(0,2,"Speed:");
 126   2            OLED_P8x16Str(48,2,speed_ch);
 127   2            OLED_P8x16Str(88,2,"M/s");
 128   2            OLED_P8x16Str(0,4,"Distance:");
 129   2            OLED_P8x16Str(72,4,distance_ch);
 130   2            if(!distance_mode){
 131   3              OLED_P8x16Str(112,4,"M");
 132   3            }else{
 133   3              if(!oled_i){
 134   4                OLED_P8x16Str(112,4,"  ");
 135   4                oled_i = 1;
 136   4              }
 137   3              OLED_P6x8Str(112,5,"KM");
 138   3            }
 139   2            OLED_P8x16Str(0,6,"Stop_");
 140   2            OLED_P6x8Str(40,6,"Push K2 Start");
 141   2            OLED_P6x8Str(40,7,"Push K3 Clear");
 142   2            os_wait2(K_TMO,25);
 143   2            OLED_P6x8Str(40,6,"             ");
 144   2            OLED_P6x8Str(40,6,"Push K2 Start");
 145   2            OLED_P6x8Str(40,7,"             ");
 146   2            OLED_P6x8Str(40,7,"Push K3 Clear");
 147   2            break;
 148   2          
 149   2          case 2:
 150   2            display_last_mode = display_mode;
 151   2            OLED_P8x16Str(0,6,"Running");
 152   2            OLED_P6x8Str(56,6,"K2 SW Speed");
 153   2            OLED_P6x8Str(56,7,"            ");
 154   2            display_mode = 3;
 155   2            break;
 156   2            
 157   2          case 3:
 158   2            oled_i = 0;
 159   2            display_last_mode = display_mode;
 160   2            w_speed += 0.2;
 161   2            w_distance += 100.2;
 162   2            float_to_char(w_speed,speed_ch);
 163   2            float_1_to_char(ws_distance,distance_ch);
 164   2            OLED_P8x16Str(48,2,speed_ch);
 165   2            OLED_P8x16Str(72,4,distance_ch);
 166   2            OLED_P6x8Str(56 + line_i * 6,7,"_");
 167   2            line_i ++;
 168   2            if(line_i == 12){
 169   3              line_i = 0;
 170   3              OLED_P6x8Str(56,7,"            ");
 171   3              OLED_P6x8Str(56,7,"Push K3 Stop");
 172   3            }
 173   2            break;
 174   2            
 175   2          case 4:
 176   2            display_last_mode = display_mode;
 177   2            OLED_P8x16Str(32,1,"Distance");
C51 COMPILER V9.60.0.0   OLED12864                                                         06/29/2023 12:10:41 PAGE 4   

 178   2            OLED_P8x16Str(28,3,"Set zero!");
 179   2            OLED_P8x16Str(0,5,"Push K2 continue");
 180   2            OLED_P8x16Str(0,5,"                ");
 181   2            OLED_P8x16Str(0,5,"Push K2 continue");
 182   2            w_speed = 0;
 183   2            w_distance = 0;
 184   2            ws_distance = 0;
 185   2            distance_mode = 0;
 186   2            break;
 187   2          
 188   2          case 5:
 189   2            OLED_CLS();//清屏
 190   2            os_wait2(K_TMO,120);
 191   2            switch (display_last_mode){
 192   3              case 4:
 193   3                display_mode = 6;
 194   3                break;
 195   3              case 1:
 196   3                display_mode = 4;
 197   3                break;
 198   3              case 6:
 199   3                display_mode = 1;
 200   3                break;
 201   3              default :
 202   3                break;
 203   3            }
 204   2            break;
 205   2            
 206   2          case 6:
 207   2            display_last_mode = display_mode;
 208   2            OLED_P8x16Str(8,0,"Welcome To Use");
 209   2            OLED_P6x8Str (7,2,"Mil billing system");
 210   2            OLED_P8x16Str(0,3,"GUET----LQS");
 211   2      //      OLED_P6x8Str (88,3,"21003");
 212   2      //      OLED_P6x8Str (88,4,"00317");
 213   2            OLED_P8x16Str(8,5,"EVOLUTION-TEAM");
 214   2            OLED_P6x8Str(10,7,"Push K2 To Continue");
 215   2            OLED_P6x8Str(10,7,"                   ");
 216   2            OLED_P6x8Str(10,7,"Push K2 To Continue");
 217   2            break;
 218   2          
 219   2          default :
 220   2            break;
 221   2        }
 222   1        
 223   1      //    for(oled_i=0; oled_i<8; oled_i++)//通过点整显示汉字 -- i表示字表数组的位置
 224   1      //    {
 225   1      ////      OLED_P16x16Ch(i*16,0,i);
 226   1      //      OLED_P16x16Ch(oled_i*16,2,oled_i+8);
 227   1      //      OLED_P16x16Ch(oled_i*16,4,oled_i+16);
 228   1      //      OLED_P16x16Ch(oled_i*16,6,oled_i+24);
 229   1      //    }
 230   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2470    ----
   CONSTANT SIZE    =   2404    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30      57
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   OLED12864                                                         06/29/2023 12:10:41 PAGE 5   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
