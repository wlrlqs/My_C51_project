C51 COMPILER V9.60.0.0   OLED12864                                                         06/30/2023 01:45:46 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED12864
OBJECT MODULE PLACED IN .\Objects\OLED12864.obj
COMPILER INVOKED BY: C:\Keil_v5_c51\C51\BIN\C51.EXE Application\OLED12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\OLED12864.lst) TABS(2) OBJECT(.\Objects\OLED12864.obj)

line level    source

   1          #include "codetab.h"
   2          #include "LQ12864.h"
   3          #include "OLED12864.h"
   4          #include <rtx51tny.h>
   5          #include <stdio.h>
   6          #include <string.h>
   7          #define LED P1
   8          
   9          //引用外部变量
  10          extern float w_speed,w_distance,ws_distance;
  11          extern int speed_choose;
  12          extern unsigned int Usart_flag;
  13          //内部变量定义
  14          unsigned int display_mode = 6,display_last_mode = 0,distance_mode = 0;
  15          unsigned int oled_i = 0,led_i = 0,line_i = 0,ii = 0;
  16          unsigned char speed_ch[6],distance_ch[6],led_speed[4] = {0x7F,0x3F,0x1F,0x0F};
  17          /****************************************************
  18          函 数 名：usart_led(void)
  19          功    能：串口通信实时显示到LED灯上
  20          入口参数：无
  21          返 回 值：无
  22          应用范围：led任务
  23          备    注：
  24          *****************************************************/
  25          void usart_led(void){
  26   1        if(Usart_flag){
  27   2            led_i = 30;
  28   2          }else{
  29   2            led_i = 0;
  30   2          }
  31   1          while(led_i){
  32   2            os_wait2(K_TMO,50);
  33   2            LED0 = !LED0;
  34   2            led_i --;
  35   2          }
  36   1      }
  37          
  38          /****************************************************
  39          函 数 名：float_to_char
  40          功    能：将传入的num浮点数转化为两位整数，两位小数的字符串，以'\0'结尾 ，用于屏幕显示
  41          入口参数：float num, unsigned char str[6]
  42          返 回 值：无
  43          应用范围：oled任务
  44          备    注：
  45          *****************************************************/
  46          void float_to_char(float num, unsigned char str[6]){
  47   1        int whole_part;    // 取整数部分 
  48   1        int decimal_part;    // 取小数部分
  49   1        whole_part = (int)num;    // 取整数部分 
  50   1        decimal_part = (int)((int)(num * 100) - whole_part * 100);    // 取小数部分
  51   1        str[0] = (unsigned char)(whole_part / 10) + '0';
  52   1        str[1] = (unsigned char)(whole_part % 10) + '0';
  53   1        str[2] = '.';
  54   1        str[3] = (unsigned char)(decimal_part / 10) + '0';
C51 COMPILER V9.60.0.0   OLED12864                                                         06/30/2023 01:45:46 PAGE 2   

  55   1        str[4] = (unsigned char)(decimal_part % 10) + '0';
  56   1        str[5] = '\0';
  57   1      }
  58          
  59          /****************************************************
  60          函 数 名：float_1_to_char
  61          功    能：将传入的num浮点数转化为三位整数，一位小数的字符串，以'\0'结尾 ，用于屏幕显示
  62          入口参数：float num, unsigned char str[6]
  63          返 回 值：无
  64          应用范围：oled任务
  65          备    注：
  66          *****************************************************/
  67          void float_1_to_char(float num, unsigned char str[6]){
  68   1        int whole_part;    // 取整数部分 
  69   1        int decimal_part;    // 取小数部分
  70   1        whole_part = (int)num;    // 取整数部分 
  71   1        decimal_part = (int)((int)(num * 100) - whole_part * 100);    // 取小数部分
  72   1        str[0] = (unsigned char)(whole_part / 100) + '0';
  73   1        str[1] = (unsigned char)((whole_part / 10) % 10) + '0';
  74   1        str[2] = (unsigned char)(whole_part %  10) + '0';
  75   1        str[3] = '.';
  76   1        str[4] = (unsigned char)(decimal_part / 10) + '0';
  77   1        str[5] = '\0';
  78   1      }
  79          
  80          /****************************************************
  81          函 数 名：led
  82          功    能：LED灯控制任务
  83          入口参数：无
  84          返 回 值：无
  85          应用范围：led任务
  86          备    注：
  87          *****************************************************/
  88          void led(void){
  89   1        switch (display_mode){
  90   2          case 1:
  91   2            LED = 0xAA;
  92   2            os_wait2(K_TMO,200);
  93   2            os_wait2(K_TMO,100);
  94   2            os_wait2(K_TMO,200);
  95   2            os_wait2(K_TMO,100);
  96   2            LED = 0x55;
  97   2            os_wait2(K_TMO,200);
  98   2            os_wait2(K_TMO,100);
  99   2            os_wait2(K_TMO,200);
 100   2            os_wait2(K_TMO,100);
 101   2            if(speed_choose == 2 || speed_choose == 3){
 102   3              P2 = P2 | 0xF0;
 103   3            }
 104   2            break;
 105   2          
 106   2          case 2:
 107   2            break;
 108   2            
 109   2          case 3:
 110   2            LED = P2 & led_speed[speed_choose];
 111   2            break;
 112   2            
 113   2          case 4:
 114   2            LED = 0x00;
 115   2            os_wait2(K_TMO,200);
 116   2            os_wait2(K_TMO,200);
C51 COMPILER V9.60.0.0   OLED12864                                                         06/30/2023 01:45:46 PAGE 3   

 117   2            os_wait2(K_TMO,200);
 118   2            os_wait2(K_TMO,200);
 119   2            LED = 0xFF;
 120   2            os_wait2(K_TMO,200);
 121   2            os_wait2(K_TMO,200);
 122   2            os_wait2(K_TMO,200);
 123   2            os_wait2(K_TMO,200);
 124   2            break;
 125   2          
 126   2          case 5:
 127   2            
 128   2            break;
 129   2            
 130   2          case 6:
 131   2            LED = 0xFE;
 132   2            for(ii = 0; ii < 8;ii++){
 133   3              LED = (LED >> (8 - 1) | (LED << 1));//(x >> (32 - n) | (x << n))循环左移//(x << (32 - n) | (x >> n))右
             -移
 134   3              os_wait2(K_TMO,75);
 135   3              os_wait2(K_TMO,75);
 136   3            }
 137   2            break;
 138   2          
 139   2          default :
 140   2            break;
 141   2        }
 142   1        
 143   1      }
 144          
 145          /****************************************************
 146          函 数 名：oled
 147          功    能：OLED显示刷新控制任务
 148          入口参数：无
 149          返 回 值：无
 150          应用范围：oled任务
 151          备    注：
 152          *****************************************************/
 153          void oled(void){
 154   1        if(w_distance >= 1000 && !distance_mode){
 155   2            distance_mode = 1;
 156   2            OLED_P8x16Str(112,4,"  ");
 157   2            OLED_P6x8Str(112,5,"KM");
 158   2          }
 159   1          if(!distance_mode){
 160   2            ws_distance = w_distance;
 161   2          }else{
 162   2            ws_distance = w_distance / 1000;
 163   2          }
 164   1        switch (display_mode){
 165   2          case 1://开始和暂停界面
 166   2            display_last_mode = display_mode;
 167   2            float_to_char(0,speed_ch);
 168   2            float_1_to_char(ws_distance,distance_ch);
 169   2            OLED_P6x8Str(7,0,"Mil billing system");
 170   2            OLED_P6x8Str(1 ,1,"--------------------");
 171   2            OLED_P8x16Str(0,2,"Speed:");
 172   2            OLED_P8x16Str(48,2,speed_ch);
 173   2            OLED_P8x16Str(88,2,"M/s");
 174   2            OLED_P8x16Str(0,4,"Distance:");
 175   2            OLED_P8x16Str(72,4,distance_ch);
 176   2            if(!distance_mode){
 177   3              OLED_P8x16Str(112,4,"M");
C51 COMPILER V9.60.0.0   OLED12864                                                         06/30/2023 01:45:46 PAGE 4   

 178   3            }else{
 179   3              if(!oled_i){
 180   4                OLED_P8x16Str(112,4,"  ");
 181   4                oled_i = 1;
 182   4              }
 183   3              OLED_P6x8Str(112,5,"KM");
 184   3            }
 185   2            OLED_P8x16Str(0,6,"Stop_");
 186   2            OLED_P6x8Str(40,6,"Push K2 Start");
 187   2            OLED_P6x8Str(40,7,"Push K3 Clear");
 188   2            os_wait2(K_TMO,25);
 189   2            OLED_P6x8Str(40,6,"               ");
 190   2            OLED_P6x8Str(40,6,"Push K2 Start");
 191   2            OLED_P6x8Str(40,7,"               ");
 192   2            OLED_P6x8Str(40,7,"Push K3 Clear");
 193   2            break;
 194   2          
 195   2          case 2://暂停到任务开始的切换
 196   2            display_last_mode = display_mode;
 197   2            OLED_P8x16Str(0,6,"Running");
 198   2            OLED_P6x8Str(56,6,"K2 SW Speed");
 199   2            OLED_P6x8Str(56,7,"            ");
 200   2            display_mode = 3;
 201   2            break;
 202   2            
 203   2          case 3://任务运行的数据刷新
 204   2            oled_i = 0;
 205   2            display_last_mode = display_mode;
 206   2            //w_speed += 0.2;
 207   2            //w_distance += 100.2;
 208   2            float_to_char(w_speed,speed_ch);
 209   2            float_1_to_char(ws_distance,distance_ch);
 210   2            OLED_P8x16Str(48,2,speed_ch);
 211   2            OLED_P8x16Str(72,4,distance_ch);
 212   2            OLED_P6x8Str(56 + line_i * 6,7,"_");
 213   2            line_i ++;
 214   2            if(line_i == 12){
 215   3              line_i = 0;
 216   3              OLED_P6x8Str(56,7,"            ");
 217   3              OLED_P6x8Str(56,7,"Push K3 Stop");
 218   3            }
 219   2            break;
 220   2            
 221   2          case 4://清除任务，数据归零且显示
 222   2            display_last_mode = display_mode;
 223   2            OLED_P8x16Str(32,1,"Distance");
 224   2            OLED_P8x16Str(28,3,"Set zero!");
 225   2            OLED_P8x16Str(0,5,"Push K2 continue");
 226   2            OLED_P8x16Str(0,5,"                ");
 227   2            OLED_P8x16Str(0,5,"Push K2 continue");
 228   2            w_speed = 0;
 229   2            w_distance = 0;
 230   2            ws_distance = 0;
 231   2            distance_mode = 0;
 232   2            break;
 233   2          
 234   2          case 5://清屏任务，根据上一个需要清屏的显示任务调度下一个显示任务
 235   2            OLED_CLS();//清屏
 236   2            os_wait2(K_TMO,120);
 237   2            switch (display_last_mode){
 238   3              case 4:
 239   3                display_mode = 6;
C51 COMPILER V9.60.0.0   OLED12864                                                         06/30/2023 01:45:46 PAGE 5   

 240   3                break;
 241   3              case 1:
 242   3                display_mode = 4;
 243   3                break;
 244   3              case 6:
 245   3                display_mode = 1;
 246   3                break;
 247   3              default :
 248   3                break;
 249   3            }
 250   2            break;
 251   2            
 252   2          case 6://欢迎界面
 253   2            display_last_mode = display_mode;
 254   2            OLED_P8x16Str(8,0,"Welcome To Use");
 255   2            OLED_P6x8Str (7,2,"Mil billing system");
 256   2            OLED_P8x16Str(0,3,"GUET----LQS");
 257   2      //      OLED_P6x8Str (88,3,"21003");
 258   2      //      OLED_P6x8Str (88,4,"00317");
 259   2            OLED_P8x16Str(8,5,"EVOLUTION-TEAM");
 260   2            OLED_P6x8Str(10,7,"Push K2 To Continue");
 261   2            OLED_P6x8Str(10,7,"                   ");
 262   2            OLED_P6x8Str(10,7,"Push K2 To Continue");
 263   2            break;
 264   2          
 265   2          default :
 266   2            break;
 267   2        }
 268   1        
 269   1      //    for(oled_i=0; oled_i<8; oled_i++)//通过点整显示汉字 -- i表示字表数组的位置
 270   1      //    {
 271   1      ////      OLED_P16x16Ch(i*16,0,i);
 272   1      //      OLED_P16x16Ch(oled_i*16,2,oled_i+8);
 273   1      //      OLED_P16x16Ch(oled_i*16,4,oled_i+16);
 274   1      //      OLED_P16x16Ch(oled_i*16,6,oled_i+24);
 275   1      //    }
 276   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2469    ----
   CONSTANT SIZE    =   2406    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30      53
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
