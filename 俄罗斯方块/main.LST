C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "reg52.h"
   2          
   3          
   4          
   5          
   6          
   7          #define uchar unsigned char
   8          
   9          #define uint unsigned int
  10          
  11          static unsigned long Seed = 1;
  12          
  13          #define A 48271L
  14          
  15          #define M 2147483647L
  16          
  17          #define Q (M / A)
  18          
  19          #define R (M % A)
  20          
  21          /************************************
  22          
  23          伪随机数发生器
  24          
  25          *************************************/
  26          
  27          double Random(void)
  28          
  29          {
  30   1      long TmpSeed;
  31   1      
  32   1      TmpSeed=A*(Seed%Q)-R*(Seed/Q);
  33   1      
  34   1      if(TmpSeed>=0)
  35   1      
  36   1      Seed=TmpSeed;
  37   1      
  38   1      else
  39   1      
  40   1      Seed=TmpSeed+M;
  41   1      
  42   1      return (double)Seed/M;
  43   1      
  44   1      }
  45          
  46          /**************************************
  47          
  48          为伪随机数发生器播种
  49          
  50          ***************************************/
  51          
  52          void InitRandom(unsigned long InitVal)
  53          
  54          {
  55   1      Seed=InitVal;
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 2   

  56   1      
  57   1      }
  58          
  59          //延时子程序
  60          
  61          void Delay(unsigned int t)
  62          
  63          {
  64   1      unsigned int i,j;
  65   1      
  66   1      
  67   1      
  68   1      for(j=0;j<10;j++);
  69   1      
  70   1      }
*** WARNING C280 IN LINE 61 OF main.c: 't': unreferenced local variable
*** WARNING C280 IN LINE 64 OF main.c: 'i': unreferenced local variable
  71          
  72          #define LGOU 0
  73          
  74          #define RGOU 1
  75          
  76          #define RZ        2
  77          
  78          #define LZ        3
  79          
  80          #define T        4
  81          
  82          #define GUN 5
  83          
  84          #define BOX 6
  85          
  86          unsigned int idata num[19+2]={
  87          0xfff,//第1行，最下面
  88          
  89          0x801,0x801,0x801,0x801,0x801,0x801,0x801,0x801,0x801,0x801,
  90          
  91          0x801,0x801,0x801,0x801,0x801,0x801,0x801,0x801,0x801,//第2行到第20行共19行
  92          
  93          0xfff//第21行，最上面
  94          
  95          };//定义共21行，其中num[0]为下墙壁行，num[20]为上墙壁行,每行12格，最左一格为左墙壁列，最右一格为右墙壁列
  96          
  97          unsigned char code Block[28][2]={
  98          /*
  99          
 100          *   口     口口口   口口
 101          
 102          *   口     口         口      口
 103          
 104          *   口口              口  口口口
 105          
 106          */
 107          
 108          {0x88,0xc0},{0xe8,0x00},{0x62,0x20},{0x02,0xe0},
 109          
 110          /*
 111          
 112          *   口        口口 口口口
 113          
 114          *   口 口     口       口
 115          
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 3   

 116          * 口口 口口口 口
 117          
 118          */
 119          
 120          {0x22,0x60},{0x08,0xe0},{0xc8,0x80},{0xe2,0x00},
 121          
 122          /*
 123          
 124          *   口
 125          
 126          *   口口         口口
 127          
 128          *     口       口口
 129          
 130          */
 131          
 132          {0x8c,0x40},{0x6c,0x00},{0x8c,0x40},{0x6c,0x00},
 133          
 134          /*
 135          
 136          *   口        口口
 137          
 138          * 口口          口口
 139          
 140          * 口
 141          
 142          */
 143          
 144          {0x4c,0x80},{0xc6,0x00},{0x4c,0x80},{0xc6,0x00},
 145          
 146          /*
 147          
 148          *          口                口
 149          
 150          *   口     口口   口口口   口口
 151          
 152          * 口口口   口       口       口
 153          
 154          */
 155          
 156          {0x04,0xe0},{0x8c,0x80},{0xe4,0x00},{0x26,0x20},
 157          
 158          /*口
 159          
 160          * 口
 161          
 162          * 口       口口口口
 163          
 164          * 口
 165          
 166          */
 167          
 168          {0x44,0x44},{0x0f,0x00},{0x44,0x44},{0x0f,0x00},
 169          
 170          /*
 171          
 172          * 口口
 173          
 174          * 口口
 175          
 176          */
 177          
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 4   

 178          {0x06,0x60},{0x06,0x60},{0x06,0x60},{0x06,0x60}
 179          
 180          };
 181          
 182          #define PASSSCORE 20
 183          
 184          struct Jimu
 185          
 186          {
 187          unsigned int dat;
 188          
 189          char x;
 190          
 191          unsigned char y;
 192          
 193          unsigned char type;
 194          
 195          unsigned char change;
 196          
 197          }Sign[3];//积木结构体
 198          
 199          unsigned char SysFlag=0;
 200          
 201          #define NEWSIGNFLAG 0
 202          
 203          #define DEADFLAG 1
 204          
 205          #define PAUSEFLAG 2
 206          
 207          unsigned char Score=0;
 208          
 209          unsigned char Level=1;
 210          
 211          unsigned char DelayCnt=5;
 212          
 213          unsigned char KeyBuffer=0;
 214          
 215          #define RESEVER 1
 216          
 217          #define CHANGE 2
 218          
 219          #define DOWN 3
 220          
 221          #define LEFT 4
 222          
 223          #define RIGHT 5
 224          
 225          #define PAUSE 6
 226          
 227          /*********************************
 228          
 229          初始化MPU
 230          
 231          **********************************/
 232          
 233          void InitCpu(void)
 234          
 235          {
 236   1      TMOD=0x0;
 237   1      
 238   1      TH0=0;
 239   1      
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 5   

 240   1      TL0=0;
 241   1      
 242   1      TR0=1;
 243   1      
 244   1      ET0=1;
 245   1      
 246   1      EA=1;
 247   1      
 248   1      }
 249          
 250          /*****************************
 251          
 252          定时中断服务子程序
 253          
 254          ******************************/
 255          
 256          void Timer0Int(void) interrupt 1
 257          
 258          {
 259   1      switch(OSReadKey())
*** WARNING C206 IN LINE 259 OF main.c: 'OSReadKey': missing function-prototype
 260   1      
 261   1      {
 262   2      case 9:
 263   2      
 264   2      KeyBuffer=PAUSE;
 265   2      
 266   2      break;
 267   2      
 268   2      case 13:
 269   2      
 270   2      KeyBuffer=CHANGE;
 271   2      
 272   2      break;
 273   2      
 274   2      case 17:
 275   2      
 276   2      KeyBuffer=DOWN;
 277   2      
 278   2      break;
 279   2      
 280   2      case 21:
 281   2      
 282   2      KeyBuffer=RIGHT;
 283   2      
 284   2      break;
 285   2      
 286   2      case 25:
 287   2      
 288   2      KeyBuffer=LEFT;
 289   2      
 290   2      break;
 291   2      
 292   2      default:
 293   2      
 294   2      break;
 295   2      
 296   2      }
 297   1      
 298   1      }
 299          
 300          /******************************
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 6   

 301          
 302          画墙壁，初始化界面
 303          
 304          *******************************/
 305          
 306          void DrawBoard(void)
 307          
 308          {
 309   1      unsigned char n;
 310   1      
 311   1      for(n=0;n<12;n++)
 312   1      
 313   1      {
 314   2      Lcd_Rectangle(3*n,0,3*n+2,2,1);
*** WARNING C206 IN LINE 314 OF main.c: 'Lcd_Rectangle': missing function-prototype
*** ERROR C267 IN LINE 314 OF main.c: 'Lcd_Rectangle': requires ANSI-style prototype
 315   2      
 316   2      Lcd_Rectangle(3*n,60,3*n+2,62,1);
 317   2      
 318   2      }
 319   1      
 320   1      for(n=0;n<20;n++)
 321   1      
 322   1      {
 323   2      Lcd_Rectangle(0,3*n,2,3*n+2,1);
 324   2      
 325   2      Lcd_Rectangle(33,3*n,35,3*n+2,1);
 326   2      
 327   2      }
 328   1      
 329   1      Lcd_WriteStr(4,0,"TOTO原创");
 330   1      
 331   1      Lcd_WriteStr(3,2,"Score:");
 332   1      
 333   1      Lcd_WriteStr(3,3,"Level:");
 334   1      
 335   1      }
 336          
 337          /***********************************
 338          
 339          游戏结束处理
 340          
 341          ************************************/
 342          
 343          void GameOver(void)
 344          
 345          {
 346   1      if((SysFlag&(1<
 347   1      
 348   1      Lcd_WriteStr(3,1,"You Fail");
 349   1      
 350   1      else
 351   1      
 352   1      Lcd_WriteStr(3,1,"You Pass");
 353   1      
 354   1      }
 355          
 356          unsigned int code MaskTab[16]={
 357          0x0001,0x0002,0x0004,0x0008,0x0010,0x0020,0x0040,0x0080,
 358          
 359          0x0100,0x0200,0x0400,0x0800,0x1000,0x2000,0x4000,0x8000
 360          
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 7   

 361          };
 362          
 363          /**********************************
 364          
 365          根据积木图标左下坐标X，Y来画出积木图标
 366          
 367          ***********************************/
 368          
 369          void DrawSign(struct Jimu Temp,unsigned char DrawMode)
 370          
 371          {
 372   1      unsigned char m,n;
 373   1      
 374   1      for(m=0;m<4;m++)
 375   1      
 376   1      for(n=0;n<4;n++)
 377   1      
 378   1      {
 379   2      if((Temp.dat&MaskTab[4*m+n])!=0)
 380   2      
 381   2      Lcd_Rectangle(Temp.x+n*3,Temp.y-2-3*m,Temp.x+n*3+2,Temp.y-3*m,DrawMode);
 382   2      
 383   2      }
 384   1      
 385   1      }
 386          
 387          /********************************
 388          
 389          将积木图标值融入num数据中
 390          
 391          也即把积木图标固定，无法再下降
 392          
 393          *********************************/
 394          
 395          FixSign(void)
 396          
 397          {
 398   1      unsigned char m,n;
 399   1      
 400   1      for(m=0;m<4;m++)//行循环
 401   1      
 402   1      for(n=0;n<4;n++)//列循环
 403   1      
 404   1      {
 405   2      if((Sign[0].dat&MaskTab[4*m+n])!=0)
 406   2      
 407   2      {
 408   3      num[20-(Sign[0].y-2)/3+m]|=MaskTab[11-Sign[0].x/3-n];
 409   3      
 410   3      }
 411   2      
 412   2      }
 413   1      
 414   1      }
 415          
 416          /********************************
 417          
 418          判断积木图标中方块是否与障碍方块重合
 419          
 420          *********************************/
 421          
 422          unsigned char CheckIf(void)
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 8   

 423          
 424          {
 425   1      unsigned char m,n;
 426   1      
 427   1      for(m=0;m<4;m++)//行循环
 428   1      
 429   1      for(n=0;n<4;n++)//列循环
 430   1      
 431   1      {
 432   2      if((Sign[1].dat&MaskTab[4*m+n])!=0)
 433   2      
 434   2      {
 435   3      if((num[20-(Sign[1].y-2)/3+m]&MaskTab[11-Sign[1].x/3-n])!=0)
 436   3      
 437   3      return 0;
 438   3      
 439   3      }
 440   2      
 441   2      }
 442   1      
 443   1      return 1;
 444   1      
 445   1      }
 446          
 447          /********************************
 448          
 449          判断积木图标是否可以继续下降一格
 450          
 451          ********************************/
 452          
 453          unsigned char CheckIfDown(void)
 454          
 455          {
 456   1      Sign[1]=Sign[0];//
 457   1      
 458   1      Sign[1].y+=3;//假设下降一格
 459   1      
 460   1      return CheckIf();
 461   1      
 462   1      }
 463          
 464          /********************************
 465          
 466          判断积木图标是否可以向左移动
 467          
 468          *********************************/
 469          
 470          unsigned char CheckIfLeft(void)
 471          
 472          {
 473   1      Sign[1]=Sign[0];
 474   1      
 475   1      Sign[1].x-=3;
 476   1      
 477   1      return CheckIf();
 478   1      
 479   1      }
 480          
 481          /********************************
 482          
 483          判断积木图标是否可以向右移动
 484          
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 9   

 485          *********************************/
 486          
 487          unsigned char CheckIfRight(void)
 488          
 489          {
 490   1      Sign[1]=Sign[0];
 491   1      
 492   1      Sign[1].x+=3;
 493   1      
 494   1      return CheckIf();
 495   1      
 496   1      }
 497          
 498          /********************************
 499          
 500          判断是否可以旋转
 501          
 502          *********************************/
 503          
 504          unsigned char CheckIfRoll(void)
 505          
 506          {
 507   1      unsigned char i;
 508   1      
 509   1      unsigned int Temp;
 510   1      
 511   1      Sign[1]=Sign[0];
 512   1      
 513   1      if(++Sign[1].change>3)
 514   1      
 515   1      Sign[1].change=0;
 516   1      
 517   1      i=Sign[1].type*4+Sign[1].change;
 518   1      
 519   1      Temp=(unsigned int)Block[i][0]<<8;
 520   1      
 521   1      Temp=Temp|Block[i][1];
 522   1      
 523   1      Sign[1].dat=Temp;
 524   1      
 525   1      return CheckIf();
 526   1      
 527   1      }
 528          
 529          /********************************
 530          
 531          寻找满格的行并做消除处理
 532          
 533          最多寻找4个满行并做消除
 534          
 535          *********************************/
 536          
 537          void DelFull(void)
 538          
 539          {
 540   1      unsigned char m,n;
 541   1      
 542   1      unsigned char Temp;
 543   1      
 544   1      unsigned char Flag=0;
 545   1      
 546   1      Temp=(Sign[0].y-2)/3;
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 10  

 547   1      
 548   1      if(Temp>=20)//防止越过了下边界
 549   1      
 550   1      Temp=1;
 551   1      
 552   1      else
 553   1      
 554   1      Temp=20-Temp;
 555   1      
 556   1      for(n=Temp+3;n>=Temp;n--)//积木图标的最顶行开始寻找满行比较有利于运算
 557   1      
 558   1      {
 559   2      if(num[n]==0xfff)
 560   2      
 561   2      {
 562   3      Flag=1;
 563   3      
 564   3      for(m=n+1;m<=19;m++)
 565   3      
 566   3      {
 567   4      num[m-1]=num[m];
 568   4      
 569   4      }
 570   3      
 571   3      num[m]=0x801;
 572   3      
 573   3      Score++;//每找到一个满行，则分数加1
 574   3      
 575   3      }
 576   2      
 577   2      }
 578   1      
 579   1      if(Flag)//为加速而设置并判断的标志，有已固定的积木有满格消行变化则重画积木界面
 580   1      
 581   1      {
 582   2      for(m=Temp;m<=19;m++)//为加速，不必要重第一行重画起，只需要从积木图标最下行开始往上的重画
 583   2      
 584   2      for(n=1;n<=10;n++)
 585   2      
 586   2      {
 587   3      if((num[m]&MaskTab[n])==0)
 588   3      
 589   3      {
 590   4      if(Lcd_ReadPixel(30-(n-1)*3,57-(m-1)*3)!=0)//为加速而做的读象素操作
 591   4      
 592   4      {
 593   5      Lcd_Rectangle(30-(n-1)*3,57-(m-1)*3,30-(n-1)*3+2,57-(m-1)*3+2,0);
 594   5      
 595   5      }
 596   4      
 597   4      }
 598   3      
 599   3      else
 600   3      
 601   3      {
 602   4      if(Lcd_ReadPixel(30-(n-1)*3,57-(m-1)*3)==0)//为加速而做的读象素操作
 603   4      
 604   4      {
 605   5      Lcd_Rectangle(30-(n-1)*3,57-(m-1)*3,30-(n-1)*3+2,57-(m-1)*3+2,1);
 606   5      
 607   5      }
 608   4      
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 11  

 609   4      }
 610   3      
 611   3      }
 612   2      
 613   2      }
 614   1      
 615   1      }
 616          
 617          /*******************************
 618          
 619          随机产生一个积木图标放到预产生区域并显示出来
 620          
 621          ********************************/
 622          
 623          void CreatSign(void)
 624          
 625          {
 626   1      unsigned char n;
 627   1      
 628   1      unsigned int Temp;
 629   1      
 630   1      DrawSign(Sign[2],0);//先清除
 631   1      
 632   1      n=Random()*28;
 633   1      
 634   1      Temp=(unsigned int)Block[n][0]<<8;
 635   1      
 636   1      Temp=Temp|Block[n][1];
 637   1      
 638   1      Sign[2].dat=Temp;
 639   1      
 640   1      Sign[2].x=45;
 641   1      
 642   1      Sign[2].y=4*3+2;
 643   1      
 644   1      Sign[2].type=n/4;
 645   1      
 646   1      Sign[2].change=n%4;
 647   1      
 648   1      DrawSign(Sign[2],1);//后画出
 649   1      
 650   1      }
 651          
 652          void PrintScore(void)
 653          
 654          {
 655   1      unsigned char Str[3];
 656   1      
 657   1      Str[0]=(Score/10)|0x30;
 658   1      
 659   1      Str[1]=(Score%10)|0x30;
 660   1      
 661   1      Str[2]=0;
 662   1      
 663   1      Lcd_WriteStr(6,2,Str);
 664   1      
 665   1      }
 666          
 667          void PrintLevel(void)
 668          
 669          {
 670   1      unsigned char Str[3];
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 12  

 671   1      
 672   1      Str[0]=(Level/10)|0x30;
 673   1      
 674   1      Str[1]=(Level%10)|0x30;
 675   1      
 676   1      Str[2]=0;
 677   1      
 678   1      Lcd_WriteStr(6,3,Str);
 679   1      
 680   1      }
 681          
 682          /********************************
 683          
 684          游戏的具体过程，也是贪吃蛇算法的关键部分
 685          
 686          *********************************/
 687          
 688          void GamePlay(void)
 689          
 690          {
 691   1      unsigned char m,n;
 692   1      
 693   1      unsigned int Temp;
 694   1      
 695   1      SysFlag|=1<
 696   1      
 697   1      InitRandom(TL0);
 698   1      
 699   1      Lcd_WriteStr(3,1,"Playing");
 700   1      
 701   1      PrintScore();
 702   1      
 703   1      PrintLevel();
 704   1      
 705   1      CreatSign();
 706   1      
 707   1      while(1)
 708   1      
 709   1      {
 710   2      if((SysFlag&(1<
 711   2      
 712   2      {
 713   2      SysFlag&=~(1<
 714   2      
 715   2      Sign[0]=Sign[2];
 716   2      
 717   2      CreatSign();
 718   2      
 719   2      Sign[0].x=12;
 720   2      
 721   2      Sign[0].y=14;
 722   2      
 723   2      for(m=0;m<4;m++)//行循环
 724   2      
 725   2      {
 726   3      for(n=0;n<4;n++)//列循环
 727   3      
 728   3      {
 729   4      if((Sign[0].dat&MaskTab[15-m*4-n])==0)
 730   4      
 731   4      break;
 732   4      
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 13  

 733   4      }
 734   3      
 735   3      if(n==4)
 736   3      
 737   3      Sign[0].y-=3;
 738   3      
 739   3      }//将积木图标出现置顶
 740   2      
 741   2      for(m=0;m<4;m++)//行循环
 742   2      
 743   2      for(n=0;n<4;n++)//列循环
 744   2      
 745   2      {
 746   3      if((Sign[0].dat&MaskTab[4*m+n])!=0)
 747   3      
 748   3      {
 749   4      if((num[20-(Sign[0].y-2)/3+m]&MaskTab[11-Sign[0].x/3-n])!=0)
 750   4      
 751   4      SysFlag|=1<
 752   4      
 753   4      }
 754   3      
 755   3      }
 756   2      
 757   2      if((SysFlag&(1<
 758   2      
 759   2      break;//如果产生新的积木图标中的方块与已固定好的方块重合，则死亡。游戏结束
 760   2      
 761   2      DrawSign(Sign[0],1);
 762   2      
 763   2      }
 764   1      
 765   1      switch(KeyBuffer)
 766   1      
 767   1      {
 768   2      case LEFT:
 769   2      
 770   2      KeyBuffer=0;
 771   2      
 772   2      if((SysFlag&(1<
 773   2      
 774   2      {
 775   2      if(CheckIfLeft())
 776   2      
 777   2      {
 778   3      DrawSign(Sign[0],0);
 779   3      
 780   3      Sign[0].x-=3;
 781   3      
 782   3      DrawSign(Sign[0],1);
 783   3      
 784   3      }
 785   2      
 786   2      }
 787   1      
 788   1      else
 789   1      
 790   1      {
 791   2      if(++Level>=10)
 792   2      
 793   2      Level=1;
 794   2      
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 14  

 795   2      PrintLevel();
 796   2      
 797   2      }
 798   1      
 799   1      break;
 800   1      
 801   1      case RIGHT:
 802   1      
 803   1      KeyBuffer=0;
 804   1      
 805   1      if((SysFlag&(1<
 806   1      
 807   1      {
 808   1      if(CheckIfRight())
 809   1      
 810   1      {
 811   2      DrawSign(Sign[0],0);
 812   2      
 813   2      Sign[0].x+=3;
 814   2      
 815   2      DrawSign(Sign[0],1);
 816   2      
 817   2      }
 818   1      
 819   1      }
 820          
 821          else
 822          
 823          {
 824          if(++Level>=10)
 825          
 826          Level=1;
 827          
 828          PrintLevel();
 829          
 830          }
 831          
 832          break;
 833          
 834          case DOWN:
 835          
 836          KeyBuffer=0;
 837          
 838          if((SysFlag&(1<
 839          
 840          {
 841          if(CheckIfDown())//判断是否能继续下降一格
 842          
 843          {
 844          DrawSign(Sign[0],0);
 845          
 846          Sign[0].y+=3;
 847          
 848          DrawSign(Sign[0],1);
 849          
 850          }
 851          
 852          }
 853          
 854          break;
 855          
 856          case CHANGE:
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 15  

 857          
 858          KeyBuffer=0;
 859          
 860          if((SysFlag&(1<
 861          
 862          {
 863          if(CheckIfRoll())
 864          
 865          {
 866          DrawSign(Sign[0],0);
 867          
 868          if(++Sign[0].change>3)
 869          
 870          Sign[0].change=0;
 871          
 872          m=Sign[0].type*4+Sign[0].change;
 873          
 874          Temp=(unsigned int)Block[m][0]<<8;
 875          
 876          Temp=Temp|Block[m][1];
 877          
 878          Sign[0].dat=Temp;
 879          
 880          DrawSign(Sign[0],1);
 881          
 882          }
 883          
 884          }
 885          
 886          break;
 887          
 888          case PAUSE:
 889          
 890          KeyBuffer=0;
 891          
 892          SysFlag^=1<
 893          
 894          if((SysFlag&(1<
 895          
 896          {
 897          Lcd_WriteStr(3,1,"          ");
 898          
 899          Lcd_WriteStr(3,1,"Playing");
 900          
 901          }
 902          
 903          else
 904          
 905          {
 906          Lcd_WriteStr(3,1,"          ");
 907          
 908          Lcd_WriteStr(3,1,"Pause");
 909          
 910          }
 911          
 912          break;
 913          
 914          default:
 915          
 916          break;
 917          
 918          }
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 16  

 919          
 920          if((SysFlag&(1<
 921          
 922          continue;
 923          
 924          Delay(500);
 925          
 926          if(++DelayCnt>=2*(11-Level))
 927          
 928          {
 929          DelayCnt=0;
 930          
 931          if(CheckIfDown())//判断是否能继续下降一格
 932          
 933          {
 934          DrawSign(Sign[0],0);
 935          
 936          Sign[0].y+=3;
 937          
 938          DrawSign(Sign[0],1);
 939          
 940          }
 941          
 942          else
 943          
 944          {
 945          FixSign();
 946          
 947          DelFull();
 948          
 949          PrintScore();
 950          
 951          if(Score>=PASSSCORE)
 952          
 953          {
 954          SysFlag&=~(1<
 955          
 956          break;//跳出玩游戏过程
 957          
 958          }
 959          
 960          SysFlag|=1<
 961          
 962          }
 963          
 964          }
 965          
 966          }
 967          
 968          }
 969          
 970          void Main()
 971          
 972          {
 973          InitCpu();//初始化CPU
 974          
 975          Lcd_Reset(); //初始化LCD屏
 976          
 977          Lcd_Clear(0);//清屏
 978          
 979          DrawBoard();//画界面
 980          
C51 COMPILER V9.53.0.0   MAIN                                                              05/18/2022 15:56:01 PAGE 17  

 981          GamePlay();//玩游戏
 982          
 983          GameOver();//游戏结束
 984          
 985          while(1);//要想重玩，只能重启，可继续完善该游戏
 986          
 987          }

C51 COMPILATION COMPLETE.  4 WARNING(S),  1 ERROR(S)
