C51 COMPILER V9.60.0.0   MAIN                                                              06/28/2023 10:02:29 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5_c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg52.h>
   2          #include "timer2.h"
   3          
   4          #include "stepper_motor_5L4P.h"
   5          #include "timer1.h"
   6          
   7          
   8          sbit LED_RUN = P3^5;     //运行指示灯
   9          sbit BEEP = P3^0;        //蜂鸣器
  10          sbit ir_fill = P2^7;     //垃圾桶满不满检测传感器
  11          sbit ir_hand = P2^6;     //人手检测
  12          sbit ir_led = P1^0;      //垃圾桶状态指示灯
  13          sbit key_hand = P1^1;   //手动打开关闭垃圾桶按键
  14          
  15          unsigned char flag_ir_hand_check = 0;            //红外检测标志位
  16          unsigned char flag_trush_state_open_cloase = 0;   //垃圾桶状态
  17          unsigned char flag_m_open_close = 0;   //手动打开或者关闭
  18          unsigned char flag_fill = 0;
  19          unsigned char key_flag = 0;
  20          unsigned char jpg_flag = 2;
  21          
  22          void DelayMs(unsigned int i);
  23          void SerialInit();
  24          void SendByte(unsigned char sbyte);
  25          void SendString(unsigned char *pstr);
  26          void welcome_ui();
  27          void open_ui();
  28          void opened_ui();
  29          void close_ui();
  30          void closed_ui();
  31          void jpg_choose();
  32          void delay(unsigned int i){  //延时函数
  33   1        while(i--);
  34   1      }
  35          
  36          void trash_open(){           //打开垃圾桶
  37   1        stepper_init(ROT1_SEC2008*3, POSITIVE );
  38   1      }
  39          
  40          void trash_close(){         //关闭垃圾桶
  41   1        stepper_init(ROT1_SEC2008*3, INVERTION ); 
  42   1      }
  43          
  44          unsigned char time_conuter = 0;  //垃圾桶关闭时间基准
  45          void time_conter(){           //定时器中断函数
  46   1        time_conuter++;
  47   1        if(time_conuter > 200) time_conuter = 100;
  48   1        LED_RUN = ~LED_RUN;
  49   1        if(flag_fill == 1){
  50   2          BEEP = !BEEP;
  51   2        }else{
  52   2          BEEP = 1;
  53   2        }
  54   1        
  55   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              06/28/2023 10:02:29 PAGE 2   

  56          
  57          
  58          void main(){
  59   1        SerialInit();
  60   1        delay(50000);
  61   1        SendString("DIR(1);\r\n");
  62   1        delay(8000);
  63   1        SendString("DIR(1);\r\n");
  64   1        delay(8000);
  65   1        SendString("CLR(0);\r\n");
  66   1        DelayMs(2000);
  67   1        welcome_ui();
  68   1        timer2_start( 1000, time_conter);  //定时器初始化
  69   1        BEEP = 0;   //蜂鸣器初始化
  70   1        ir_led = 0;  //垃圾桶状态灯初始化
  71   1        //delay(50000);  //延时
  72   1        //delay(50000);
  73   1        //delay(50000);
  74   1        delay(50000);
  75   1        while(1){
  76   2            //trash_open();
  77   2          ir_fill = 1;
  78   2      //    if(ir_fill == 0){    //垃圾桶桶满检测
  79   2      //      delay(500);
  80   2      //      if(ir_fill == 0){
  81   2      //        flag_fill = 1;
  82   2      //        flag_ir_hand_check = 0;
  83   2      //      }
  84   2      //    }else{
  85   2      //      flag_fill = 0;
  86   2      //      ir_led = 0;
  87   2      //    }
  88   2      //    if(flag_fill ==1)
  89   2      //    {
  90   2      //      //open_ui();
  91   2      //      //trash_open();
  92   2      //      //opened_ui();
  93   2      //      while(flag_fill ==1)
  94   2      //      {
  95   2      //        BEEP = !BEEP;
  96   2      //        LED_RUN = ~LED_RUN;
  97   2      //        DelayMs(500);
  98   2      //        LED_RUN = ~LED_RUN;
  99   2      //        if(ir_fill == 0){    //垃圾桶桶满检测
 100   2      //      delay(500);
 101   2      //      if(ir_fill == 0){
 102   2      //        flag_fill = 1;
 103   2      //        flag_ir_hand_check = 0;
 104   2      //      }
 105   2      //    }else{
 106   2      //      flag_fill = 0;
 107   2      //      ir_led = 0;
 108   2      //    }
 109   2      //      }
 110   2      //      BEEP = 1;
 111   2      //      DelayMs(1000);
 112   2      //      //close_ui();
 113   2      //      //trash_close();  
 114   2      //      //closed_ui();
 115   2      //      DelayMs(500);
 116   2      //      //welcome_ui();
 117   2      //    
C51 COMPILER V9.60.0.0   MAIN                                                              06/28/2023 10:02:29 PAGE 3   

 118   2      //    }
 119   2      //    else
 120   2      //    {
 121   2      //      BEEP = 1;
 122   2      //    }
 123   2          ir_hand = 1;
 124   2          //flag_ir_hand_check=0;
 125   2          if(ir_hand == 0){  //人手检测
 126   3            delay(500);
 127   3            if(ir_hand == 0){
 128   4              flag_ir_hand_check=1;
 129   4              //while(ir_hand == 0);
 130   4              time_conuter = 0;
 131   4            }
 132   3          }else{
 133   3            if(key_flag==0){
 134   4              flag_ir_hand_check=0;
 135   4            }
 136   3          }
 137   2          if(ir_fill == 0){  //桶满检测
 138   3            delay(500);
 139   3            if(ir_fill == 0){
 140   4              flag_ir_hand_check=1;
 141   4              //while(ir_hand == 0);
 142   4              time_conuter = 0;
 143   4            }
 144   3          }
 145   2              //手动打开关闭垃圾桶检测
 146   2          key_hand = 1;
 147   2          if(key_hand == 0){
 148   3            delay(500);
 149   3            if(key_hand == 0){
 150   4              flag_ir_hand_check=1;
 151   4              flag_m_open_close = 1;
 152   4              time_conuter = 0;
 153   4              key_flag = ~key_flag;
 154   4              while(key_hand == 0);
 155   4            }
 156   3          }
 157   2          //垃圾桶打开判断
 158   2          if( (flag_fill == 0 && flag_trush_state_open_cloase==0 && flag_ir_hand_check == 1) || (flag_fill == 1 &&
             - flag_trush_state_open_cloase==0 && flag_m_open_close != 0) ){
 159   3            flag_trush_state_open_cloase=1;
 160   3            trash_open();
 161   3            open_ui();
 162   3            delay(8000);
 163   3            opened_ui();
 164   3            delay(8000);
 165   3            ir_led = 0;
 166   3            DelayMs(800);
 167   3            welcome_ui();
 168   3            flag_m_open_close = 0;
 169   3          }
 170   2          
 171   2          //垃圾桶关闭控制
 172   2          if(flag_trush_state_open_cloase==1&&flag_ir_hand_check==0)
 173   2          {
 174   3            DelayMs(2000);
 175   3            trash_close();
 176   3            close_ui();
 177   3            delay(8000);
 178   3            closed_ui();
C51 COMPILER V9.60.0.0   MAIN                                                              06/28/2023 10:02:29 PAGE 4   

 179   3            DelayMs(1000);
 180   3            welcome_ui();
 181   3            ir_led = 1;
 182   3            flag_trush_state_open_cloase=0;
 183   3          }
 184   2          ir_led = 0;
 185   2          
 186   2      
 187   2          
 188   2        }
 189   1        
 190   1      }
 191          void jpg_choose(){
 192   1        switch(jpg_flag){
 193   2          case 0:
 194   2            SendString("FSIMG(2097152,0,0,160,128,0);\r\n");
 195   2          jpg_flag ++;
 196   2          break;
 197   2          case 1:
 198   2            SendString("FSIMG(2138112,0,0,160,128,0);\r\n");
 199   2          jpg_flag ++;
 200   2          break;
 201   2          case 2:
 202   2            SendString("FSIMG(2179072,0,0,160,128,0);\r\n");
 203   2          jpg_flag ++;
 204   2          break;
 205   2          case 3:
 206   2            SendString("FSIMG(2220032,0,0,160,128,0);\r\n");
 207   2          jpg_flag ++;
 208   2          break;
 209   2          case 4:
 210   2            SendString("FSIMG(2260992,0,0,160,128,0);\r\n");
 211   2          jpg_flag ++;
 212   2          break;
 213   2          case 5:
 214   2            SendString("FSIMG(2301952,0,0,160,128,0);\r\n");
 215   2          jpg_flag ++;
 216   2          break;
 217   2          case 6:
 218   2            SendString("FSIMG(2342912,0,0,160,128,0);\r\n");
 219   2          jpg_flag ++;
 220   2          break;
 221   2          case 7:
 222   2            SendString("FSIMG(2383872,0,0,160,128,0);\r\n");
 223   2          jpg_flag = 0;
 224   2          break;
 225   2        }
 226   1      }
 227          void welcome_ui()//显示欢迎ui界面
 228          {
 229   1        SendString("CLR(0);\r\n");
 230   1        delay(8000); 
 231   1        //SendString("FSIMG(2097152,0,0,160,128,0);\r\n");
 232   1        jpg_choose();
 233   1        delay(40000); 
 234   1      //  SendString("QRCODE(8,8,https://qm.qq.com/cgi-bin/qm/qr?k=Ns796uc8EysoG11g1VVrvomLXvHEUSsf&noverify=0#,1
             -00,1);\r\n");
 235   1      //  delay(40000); 
 236   1      //  SendString("DC16(12,64,'QQ名片',1);\r\n");
 237   1        delay(4000); 
 238   1        SendString("DC16(76,10,'欢迎使用',1);\r\n");
 239   1        delay(3000); 
C51 COMPILER V9.60.0.0   MAIN                                                              06/28/2023 10:02:29 PAGE 5   

 240   1        SendString("DC16(68,26,'智能垃圾桶',1);\r\n");
 241   1      //  delay(3000); 
 242   1      //  SendString("DC16(12,80,'制作:2100300317',1);\r\n");
 243   1      //  delay(3000); 
 244   1      //  SendString("DC16(12,96,'李期王申（shen）',1);\r\n");
 245   1        delay(3000); 
 246   1        
 247   1      }
 248          void open_ui()//显示开盖ui
 249          {
 250   1        SendString("CLR(0);\r\n");
 251   1        delay(8000);  
 252   1        //SendString("FSIMG(2097152,0,0,160,128,0);\r\n");
 253   1        jpg_choose();
 254   1        delay(40000);  
 255   1        SendString("BOX(9,105,149,115,1);\r\n");//进度条边框
 256   1        delay(800);   
 257   1        SendString("DC16(9,88,'垃圾桶盖打开中',1);\r\n");
 258   1        delay(800);   
 259   1        DelayMs(100);
 260   1        SendString("BOX(16,28,35,66,1);\r\n");//垃圾桶打开第1块
 261   1        delay(800);  
 262   1        SendString("BOXF(9,105,25,115,1);\r\n");//进度条填充进度1
 263   1        delay(800); 
 264   1          SendString("DC16(9,88,'垃圾桶盖打开中*',1);\r\n");
 265   1        delay(800);   
 266   1        DelayMs(100);
 267   1        delay(800); 
 268   1        SendString("PL(51,28,51,66,1);\r\n");//垃圾桶打开第2块左竖线
 269   1        delay(800); 
 270   1        SendString("PL(70,66,70,28,1);\r\n");//垃圾桶打开第2块右竖线
 271   1        delay(800); 
 272   1        SendString("PL(70,66,51,66,1);\r\n");//垃圾桶打开第2块底横线
 273   1        delay(800);     
 274   1          SendString("PL(51,28,68,23,1);\r\n");   //垃圾桶打开第2块顶盖线
 275   1        delay(800); 
 276   1        SendString("BOXF(9,105,45,115,1);\r\n"); //进度条填充进度2
 277   1        delay(800); 
 278   1        SendString("DC16(9,88,'垃圾桶盖打开中*',1);\r\n");
 279   1        delay(800);   
 280   1        DelayMs(100);
 281   1        delay(800); 
 282   1        SendString("PL(86,28,86,66,1);\r\n");//垃圾桶打开第3块左竖线
 283   1        delay(800); 
 284   1        SendString("PL(105,66,105,28,1);\r\n");//垃圾桶打开第3块右竖线
 285   1        delay(800);  
 286   1        SendString("PL(86,66,105,66,1);\r\n");//垃圾桶打开第3块底横线
 287   1        delay(800);   
 288   1          SendString("PL(100,17,86,28,1);\r\n");//垃圾桶打开第3块顶盖线
 289   1        delay(800);  
 290   1        SendString("BOXF(9,105,75,115,1);\r\n"); //进度条填充进度3
 291   1        delay(800);  
 292   1        SendString("DC16(9,88,'垃圾桶盖打开中**',1);\r\n");
 293   1        delay(800);   
 294   1        DelayMs(100);  
 295   1        delay(800);   
 296   1          SendString("PL(122,28,122,66,1);\r\n");//垃圾桶打开第4块左竖线
 297   1        delay(800); 
 298   1        SendString("PL(141,28,141,66,1);\r\n");//垃圾桶打开第4块右竖线
 299   1        delay(800);  
 300   1        SendString("PL(122,66,141,66,1);\r\n");//垃圾桶打开第4块底横线
 301   1        delay(800); 
C51 COMPILER V9.60.0.0   MAIN                                                              06/28/2023 10:02:29 PAGE 6   

 302   1          SendString("PL(128,11,122,28,1);\r\n"); //垃圾桶打开第4块顶盖线
 303   1        delay(800);  
 304   1        SendString("BOXF(9,105,149,115,1);\r\n"); //进度条填充进度5
 305   1        delay(800);   
 306   1        SendString("DC16(9,88,'垃圾桶盖打开中***',1);\r\n");
 307   1        delay(800); 
 308   1        DelayMs(600); 
 309   1        
 310   1      }
 311          void opened_ui()
 312          {
 313   1        SendString("CLR(0);\r\n");
 314   1        delay(40000); 
 315   1        //SendString("FSIMG(2097152,0,0,160,128,0);\r\n");
 316   1        jpg_choose();
 317   1        delay(40000);
 318   1        SendString("DC16(9,88,'垃圾桶盖已成功打开*',1);\r\n");
 319   1        delay(800);
 320   1        SendString("BOXF(9,105,149,115,1);\r\n"); //进度条填充进度5
 321   1      }
 322          
 323          void close_ui()
 324          {
 325   1        SendString("CLR(0);\r\n");
 326   1        delay(8000); 
 327   1        //SendString("FSIMG(2097152,0,0,160,128,0);\r\n");
 328   1        jpg_choose();
 329   1        delay(40000); 
 330   1        SendString("BOX(9,105,149,115,1);\r\n");//进度条边框
 331   1        delay(800); 
 332   1        SendString("DC16(9,88,'垃圾桶盖关闭中',1);\r\n");
 333   1        delay(800); 
 334   1        DelayMs(100);
 335   1        SendString("PL(16,28,16,66,1);\r\n");//垃圾桶关闭第1块左竖线
 336   1        delay(800);
 337   1        SendString("PL(35,66,35,28,1);\r\n");//垃圾桶关闭第1块右竖线
 338   1        delay(800);
 339   1        SendString("PL(16,66,35,66,1);\r\n");//垃圾桶关闭第1块底横线
 340   1        delay(800);   
 341   1          SendString("PL(24,11,16,28,1);\r\n"); //垃圾桶关闭第1块顶盖线
 342   1        delay(800); 
 343   1        SendString("BOXF(9,105,25,115,1);\r\n");//进度条填充进度1
 344   1        delay(800);
 345   1          SendString("DC16(9,88,'垃圾桶盖关闭中*',1);\r\n");
 346   1        delay(800); 
 347   1        DelayMs(100);
 348   1        SendString("PL(51,28,51,66,1);\r\n");//垃圾桶关闭第2块左竖线
 349   1        delay(800);
 350   1        SendString("PL(70,66,70,28,1);\r\n");//垃圾桶关闭第2块右竖线
 351   1        delay(800);
 352   1        SendString("PL(70,66,51,66,1);\r\n");//垃圾桶关闭第2块底横线
 353   1        delay(800);   
 354   1          SendString("PL(66,17,51,28,1);\r\n");   //垃圾桶关闭第2块顶盖线
 355   1        delay(800);
 356   1        SendString("BOXF(9,105,45,115,1);\r\n"); //进度条填充进度2
 357   1        delay(800);
 358   1        SendString("DC16(9,88,'垃圾桶盖关闭中*',1);\r\n");
 359   1        delay(800); 
 360   1        DelayMs(100);
 361   1        SendString("PL(86,28,86,66,1);\r\n");//垃圾桶打开第3块左竖线
 362   1        delay(800);
 363   1        SendString("PL(105,66,105,28,1);\r\n");//垃圾桶打开第3块右竖线
C51 COMPILER V9.60.0.0   MAIN                                                              06/28/2023 10:02:29 PAGE 7   

 364   1        delay(800);
 365   1        SendString("PL(86,66,105,66,1);\r\n");//垃圾桶打开第3块底横线
 366   1        delay(800);   
 367   1          SendString("PL(100,23,86,28,1);\r\n");//垃圾桶打开第3块顶盖线
 368   1        delay(800);
 369   1        SendString("BOXF(9,105,75,115,1);\r\n"); //进度条填充进度3
 370   1        delay(800);
 371   1        SendString("DC16(9,88,'垃圾桶盖关闭中**',1);\r\n");
 372   1        delay(800); 
 373   1        DelayMs(100);   
 374   1          SendString("BOX(122,28,141,66,1);\r\n");//垃圾桶关闭4块
 375   1        delay(800);
 376   1        SendString("BOXF(9,105,149,115,1);\r\n"); //进度条填充进度5
 377   1        delay(800); 
 378   1        SendString("DC16(9,88,'垃圾桶盖关闭中***',1);\r\n");
 379   1        delay(800);
 380   1        DelayMs(600);
 381   1      }
 382          void closed_ui()
 383          {
 384   1        SendString("CLR(0);\r\n");
 385   1        delay(20000); 
 386   1        SendString("FSIMG(2097152,0,0,160,128,0);\r\n");
 387   1        delay(20000);
 388   1        SendString("DC16(9,88,'垃圾桶盖已成功关闭*',1);\r\n");
 389   1        delay(800);
 390   1        SendString("BOXF(9,105,149,115,1);\r\n"); //进度条填充进度5
 391   1        DelayMs(600);
 392   1      }
 393          /*
 394          //单片机时钟周期:11.0592MHz   以时钟1作为波特率发生器
 395          void SerialInit(){
 396           TMOD=0x20;   //设置T1工作方式为方式2
 397           TH1=0xfd; //给定时器高位装初值
 398           TL1=0xfd; //给定时器低位装初值
 399           TR1=1;  //开定时器
 400                       //以上是设置波特率
 401           SM0=0;  //设置串口通讯方式为方式1
 402           SM1=1;  
 403           REN=1;  //串口是否接收数据的开关
 404          
 405           EA=1; //总中断打开,采用查询法时不用打开中断
 406           ES=1; //串口中断开关,采用查询法时不用打开中断
 407          }
 408          */
 409          //单片机时钟周期:11.0592MHz    以时钟T2作为波特率发生器
 410          void SerialInit(){
 411   1          PCON &= 0x7F; //波特率不倍速
 412   1          SCON = 0x50;  //8位数据,可变波特率
 413   1          //AUXR |= 0x40; //定时器1时钟为Fosc,即1T
 414   1          //AUXR &= 0xFE; //串口1选择定时器1为波特率发生器
 415   1          TMOD &= 0x0F; //清除定时器1模式位
 416   1          TMOD |= 0x20; //设定定时器1为8位自动重装方式
 417   1          TL1 = 0xFD;   //设定定时初值
 418   1          TH1 = 0xFD;   //设定定时器重装值
 419   1          ET1 = 0;      //禁止定时器1中断
 420   1          TR1 = 1;      //启动定时器1
 421   1       
 422   1          REN = 1; //不开启这个无法接受数据
 423   1          ES = 1;  //开启串口中断使能
 424   1          EA = 1;
 425   1          TI = 0;
C51 COMPILER V9.60.0.0   MAIN                                                              06/28/2023 10:02:29 PAGE 8   

 426   1          RI = 0;       //串口中断开关,采用查询法时不用打开中断
 427   1      
 428   1      }
 429          
 430          
 431          //串口中断函数:
 432          void SerialPortInte(void) interrupt 4 //采用串口中断法收发数据
 433          {
 434   1         unsigned char rbyte;
 435   1         if(RI){     //RI=1,判定为串口接收到了数据，RI要清零，
 436   2               RI=0;
 437   2           rbyte=SBUF; 
 438   2           if(rbyte==0x0A){     
 439   3              SendString("");
 440   3           }else if(rbyte==0x0D){
 441   3            SendString("");
 442   3           }else{
 443   3            SendByte(rbyte); 
 444   3           }
 445   2            
 446   2           }
 447   1      
 448   1      }
 449          
 450          //串口发送一个字节:
 451          void SendByte(unsigned char sbyte)
 452          { 
 453   1           SBUF=sbyte; //发送数据
 454   1           while(!TI); //等待发送完成
 455   1           TI=0; //清零发送标志位
 456   1      }
 457           
 458          //串口发送一个字符串:
 459          void SendString(unsigned char *pstr) //定义指针
 460          {
 461   1           while(*pstr!='\0') //字符串是否发完
 462   1           {
 463   2               SendByte(*pstr);//发送字符串数据
 464   2               pstr++; //指向下一个字符
 465   2           }
 466   1      }
 467          
 468          void DelayMs(unsigned int i)  //延时i ms
 469          {
 470   1          unsigned int j;
 471   1          while(i--)
 472   1          {
 473   2              for(j = 0; j < 125; j++);
 474   2          }
 475   1      }
 476          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1422    ----
   CONSTANT SIZE    =   1245    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   MAIN                                                              06/28/2023 10:02:29 PAGE 9   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
